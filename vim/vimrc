"Vundle configurations
set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim

call vundle#begin()

Plugin 'gmarik/Vundle.vim'
Plugin 'tmhedberg/SimpylFold'
Plugin 'vim-scripts/indentpython.vim'
Plugin 'jnurmine/Zenburn'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'Valloric/YouCompleteMe'
Plugin 'scrooloose/nerdtree'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'vim-syntastic/syntastic'
Plugin 'nvie/vim-flake8'
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'
Plugin 'kien/ctrlp.vim'
Plugin 'jiangmiao/auto-pairs'
Plugin 'leafgarland/typescript-vim'

call vundle#end()
filetype plugin indent on

"Syntax highlighting
let python_highlight_all=1
syntax on

"Folding
set foldmethod=indent
set foldlevel=99
set encoding=utf-8
set nu
set clipboard=unnamed

let g:SimpylFold_docstring_preview=1

let g:ycm_python_binary_path = 'python'
let g:ycm_autoclose_preview_window_after_completion=1

"Mappings
nnoremap <space><space> za
nnoremap <CR> G
nnoremap <space>mg :YcmCompleter GoToDefinitionElseDeclaration<CR>
nnoremap <space>t :NERDTreeToggle<CR>

nnoremap <space>fs :w<CR>
nnoremap <space>fq :q<CR>

nnoremap <space>ee $
nnoremap <space>ea A
nnoremap <space>eb _
nnoremap <space>er R
nnoremap <space>l <C-w>l
nnoremap <space>k <C-w>k
nnoremap <space>j <C-w>j
nnoremap <space>h <C-w>h

map <f5> :lclose<CR>
map <f4> :lopen<CR>

"Python specific
au BufNewFile,BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=99 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix |

"Web specific
au BufNewFile,BufRead *.js,*.html,*.css,*.ts
    \ set tabstop=2 softtabstop=2 shiftwidth=2

highlight BadWhitespace ctermbg=red guibg=darkred

au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/

if exists('$TMUX')
	let &t_SI = "\<Esc>Ptmux;\<Esc>\e[5 q\<Esc>\\"
	let &t_EI = "\<Esc>Ptmux;\<Esc>\e[2 q\<Esc>\\"
else
	let &t_SI = "\e[5 q"
	let &t_EI = "\e[2 q"
endif

"Python with virtualenv support
py << EOF
import os
import sys
if 'VIRTUAL_ENV' in os.environ:
  project_base_dir = os.environ['VIRTUAL_ENV']
  activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
  execfile(activate_this, dict(__file__=activate_this))
EOF

"NERDTree
let NERDTreeIgnore=['\.pyc$', '\~$'] "ignore files in NERDTree

let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1

let g:NERDTreeDirArrowExpandable = '~'
let g:NERDTreeDirArrowCollapsible = '*'

"StatusLine
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

"Syntastic
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

"Gitgutter
set updatetime=100

"Typescript
let g:typescript_indent_disable = 1
